{"version":3,"sources":["webpack://carloskvasir.me/./src/components/header.tsx","webpack://carloskvasir.me/./src/pages/index.tsx"],"names":["siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","data","site","siteMetadata","title","description","allMdx","nodes","map","excerpt","frontmatter","fields","slug","date"],"mappings":"4LAoCA,EA7Be,SAAC,GAAD,IAAGA,EAAH,EAAGA,UAAH,OACb,0BACEC,MAAO,CACLC,WAAY,gBACZC,aAAc,YAGhB,uBACEF,MAAO,CACLG,OAAQ,SACRC,SAAU,IACVC,QAAS,sBAGX,sBAAIL,MAAO,CAAEG,OAAQ,IACnB,gBAAC,KAAD,CACEG,GAAG,IACHN,MAAO,CACLO,MAAO,QACPC,eAAgB,SAGjBT,OC2BX,EAxBiB,SAAC,GAAa,IAAXU,EAAW,EAAXA,KAClB,OACE,gBAAC,WAAD,KACE,gBAAC,EAAD,CAAQV,UAAU,aAClB,2BACE,0BAAKU,EAAKC,KAAKC,aAAaC,OAC5B,yBAAIH,EAAKC,KAAKC,aAAaE,cAG7B,2BACGJ,EAAKK,OAAOC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,YAAaC,EAAzB,EAAyBA,OAAzB,OACrB,gBAAC,WAAD,KACE,gBAAC,KAAD,CAAMb,GAAIa,EAAOC,MACf,0BAAKF,EAAYN,QAEnB,yBAAIM,EAAYG,MAChB,yBAAIJ","file":"component---src-pages-index-tsx-2a3337673674f4701db4.js","sourcesContent":["import { Link } from \"gatsby\"\nimport React from \"react\"\n\ninterface HeaderProps {\n  siteTitle: string\n}\n\nconst Header = ({ siteTitle }: HeaderProps) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nexport default Header\n","import * as React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Header from \"../components/header\"\n\nexport const query = graphql`\n  query SITE_INDEX_QUERY {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 250)\n        frontmatter {\n          title\n          date\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`\n\nconst HomePage = ({ data }) => {\n  return (\n    <React.Fragment>\n      <Header siteTitle=\"My Title\" />\n      <div>\n        <h1>{data.site.siteMetadata.title}</h1>\n        <p>{data.site.siteMetadata.description}</p>\n      </div>\n\n      <div>\n        {data.allMdx.nodes.map(({ excerpt, frontmatter, fields }) => (\n          <React.Fragment>\n            <Link to={fields.slug}>\n              <h1>{frontmatter.title}</h1>\n            </Link>\n            <p>{frontmatter.date}</p>\n            <p>{excerpt}</p>\n          </React.Fragment>\n        ))}\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default HomePage\n"],"sourceRoot":""}